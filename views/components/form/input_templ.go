// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package form

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "strconv"
import "fmt"

type InputWidth string

const (
	InputWidthFull  InputWidth = "sm:col-span-6"
	InputWidthHalf  InputWidth = "sm:col-span-3"
	InputWidthThird InputWidth = "sm:col-span-2"
)

type InputType string

const (
	InputTypeText     InputType = "text"
	InputTypeEmail    InputType = "email"
	InputTypePassword InputType = "password"
	InputTypeNumber   InputType = "number"
	InputTypeDate     InputType = "date"
	InputTypeTime     InputType = "time"
	InputTypeDateTime InputType = "datetime-local"

	InputTypeSelect InputType = "select"
)

type KV struct {
	Key   string
	Value string
}

// Component represents a component in our system.
type InputComponent[v any] struct {
	label      string
	name       string
	inputType  InputType
	get        bool
	widthStyle InputWidth
	attrs      templ.Attributes
	options    []KV
}

func input[v any](label string, name string, t InputType) InputComponent[v] {
	c := InputComponent[v]{
		widthStyle: InputWidthHalf,
		inputType:  t,
		label:      label,
		// get:        false,
		name:    name,
		options: []KV{},
		attrs:   templ.Attributes{"required": true},
	}
	return c
}

func InputSelect(label string, name string, values []KV) InputComponent[string] {
	i := input[string](label, name, InputTypeSelect)
	i.options = values
	return i
}

func InputText(label string, name string) InputComponent[string] {
	return input[string](label, name, InputTypeText)
}

func (f InputComponent[v]) Width(w InputWidth) InputComponent[v] {
	f.widthStyle = w
	return f
}

func InputNumber(label string, name string) InputComponent[int] {
	return input[int](label, name, InputTypeNumber)
}

func InputFloat(label string, name string) InputComponent[float64] {
	return input[float64](label, name, InputTypeNumber)
}

func (f InputComponent[v]) Step(step float64) InputComponent[v] {
	f.attrs["step"] = strconv.FormatFloat(step, 'f', -1, 64)
	return f
}
func (f InputComponent[v]) Max(max float64) InputComponent[v] {
	f.attrs["max"] = fmt.Sprintf("%v", max)
	return f
}

func (f InputComponent[v]) Disabled() InputComponent[v] {
	f.attrs["disabled"] = true
	return f
}

func (f InputComponent[v]) Multiple() InputComponent[v] {
	f.attrs["multiple"] = true
	return f
}

func (f InputComponent[v]) Min(min float64) InputComponent[v] {
	f.attrs["min"] = strconv.FormatFloat(min, 'f', -1, 64)
	return f
}

func (f InputComponent[v]) Optional() InputComponent[v] {
	f.attrs["required"] = "false"
	return f
}

func (f InputComponent[v]) HTMX(params HtmxLoad) InputComponent[v] {

	f.attrs["hx-trigger"] = params.Trigger
	if params.PushUrl {
		f.attrs["hx-push-url"] = "true"
	} else {
		f.attrs["hx-push-url"] = "false"
	}
	f.attrs["hx-swap"] = params.Swap
	f.attrs["hx-get"] = fmt.Sprintf("%v", params.URL)
	f.attrs["hx-target"] = params.Target

	return f
}

func (f InputComponent[v]) Value(t v) InputComponent[v] {
	value := fmt.Sprintf("%v", t)
	if value != "" && value != "0" {
		f.attrs["value"] = value
	}
	return f
}

func (f InputComponent[v]) Render(ctx context.Context, w io.Writer) error {
	return f.input().Render(ctx, w)
}

//	templ (f InputComponent[v]) inputFetch() {
//		<div hx-trigger="load" hx-get={ path.Join(views.DatabaseRoute, views.TeamsRoute, "components", "input") }></div>
//	}
func (f InputComponent[v]) input() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var templ_7745c5c3_Var2 = []any{string(f.widthStyle)}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var2).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(fmt.Sprintf("%s-component", f.name)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><label for=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(f.name))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"block text-sm font-medium leading-6 text-gray-900\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(f.label)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/form/input.templ`, Line: 140, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</label><div class=\"mt-2 w-full\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if f.inputType == InputTypeSelect {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<select")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(f.options) == 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" disabled=\"true\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, f.attrs)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" name=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(f.name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(f.name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" type=\"list\" autocomplete=\"off\" class=\"select   min-w-full max-w-full block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if f.attrs["multiple"] != true {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option disabled selected></option>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			for _, o := range f.options {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option class=\"w-full\" value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(o.Value))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(o.Key)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/form/input.templ`, Line: 158, Col: 54}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</option>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</select>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input name=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(f.name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(f.name))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" type=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(f.inputType)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, f.attrs)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" autocomplete=\"off\" class=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

type HtmxLoad struct {
	Trigger string
	URL     string
	Target  string
	PushUrl bool
	Swap    string
}

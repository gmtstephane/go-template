package locations 

import (
	l "github.com/gmtstephane/go-template/views/layouts"
	c "github.com/gmtstephane/go-template/views/components"
	t "github.com/gmtstephane/go-template/views/components/table"
	"github.com/gmtstephane/go-template/models"
	"time"
	"github.com/gmtstephane/go-template/views"
	"github.com/gmtstephane/go-template/views/components/form"
)

type locationRenderer []models.Location

// Header implements the table.Renderer interface
// It returns the header of the table
func (locs locationRenderer) Header() []t.HeaderLabel {
	return []t.HeaderLabel{
		t.Label("ID"),
		t.Label("Nom"),
		t.Label("Région"),
		t.Label("Ville"),
		t.Label("ZipCode"),
		t.Label("Créé le"),
	}
}

// Body implements the table.Renderer interface
// It returns the body of the table
func (locs locationRenderer) Body() (body [][]templ.Component) {
	for _, loc := range locs {
		body = append(body, []templ.Component{
			c.Text(loc.ID),
			c.Text(loc.Name),
			c.Text(loc.State),
			c.Text(loc.City),
			c.Text(loc.Zipcode),
			c.Text(loc.CreatedAt.Format(time.DateTime)),
		},
		)
	}
	return body
}

templ List(locs []models.Location,page int) {
	@l.Dashboard() {
		if views.IsHTMXFilter(ctx)==false {
			@Header()
		}
		@t.Render(locationRenderer(locs), page)
	}
}

templ Header() {
	<div x-data="{ open: false }">
		@l.Header(l.HeaderProps{
			Name:        "Lieux",
			Description: "Liste des lieux enregistrés dans la base de données.",
			Actions: []c.ButtonComponent{
				c.Button("Nouveau").Link(views.PathNew(views.DatabaseRoute, views.LocationsRoute)),
				c.Button("Filtrer").Click("open = !open"),
			},
		})
		@FilterSection() {
			@form.InputText("Rechercher", "name").Width(form.InputWidthThird)
		}
	</div>
}

templ FilterSection() {
	<div
		x-show="open"
		x-cloak
		x-transition:enter="transition ease-out duration-100"
		x-transition:enter-start="transform opacity-0"
		x-transition:enter-end="transform opacity-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100"
		x-transition:leave-end="transform opacity-0"
	>
		@form.Form().FilterMode() {
			@form.EmptySection() {
				{ children... }
			}
		}
	</div>
}

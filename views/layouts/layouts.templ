package layouts 

import "github.com/gmtstephane/go-template/views/components"

const (
	NotificationAreaID = "notification-panel"
)

templ Dashboard() {
	<html>
		@head()
		<body class="h-full w-full">
			<div class="min-h-full">
				@components.Navbar()
				<div class="pt-24 mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
					{ children... }
				</div>
			</div>
			@NotificationArea()
		</body>
	</html>
}

type HeaderProps struct {
	Icon        templ.Component
	Description string
	Name        string

	Actions []components.ButtonComponent
}

templ Header(p HeaderProps) {
	<header>
		<div class="px-4 sm:px-6 lg:px-8 py-4">
			<div class="sm:flex sm:items-center">
				<div class="sm:flex-auto">
					<h1 class="text-2xl font-bold leading-6 text-gray-900">{ p.Name }</h1>
					<p class="mt-2 text-sm text-gray-700">{ p.Description }</p>
				</div>
				<div class="flex mt-4 sm:ml-16 sm:mt-0 sm:flex-none space-x-2">
					for _,b :=range p.Actions {
						@b
					}
					// <button type="button" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Nouveau</button>
				</div>
			</div>
		</div>
	</header>
}

templ NotificationArea() {
	<div
		aria-live="assertive"
		class="pointer-events-none fixed inset-0 flex items-end px-4 py-6 sm:items-start sm:p-6 z-50"
	>
		<div id={ NotificationAreaID } class="flex w-full flex-col items-center space-y-4 sm:items-end"></div>
	</div>
}

//NotificationSuccess is a component that displays a success message
//It should be render inside into #NotificationAreaID with HTMX
templ NotificationSuccess(message,description string) {
	<div
		x-data="{ 
			show: false,
			}"
		x-init="setTimeout(() => show = true, 50);setTimeout(() => show = false, 5000);"
		class=" bg-green-50 p-4 relative pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg shadow-md "
		x-show="show"
		x-transition:enter="transform ease-out duration-300 transition"
		x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
		x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
		x-transition:leave="transition ease-in duration-300"
		x-transition:leave-start="opacity-100"
		x-transition:leave-end="opacity-0"
	>
		<div class="flex">
			<div class="flex-shrink-0">
				<svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd"></path>
				</svg>
			</div>
			<div class="ml-3">
				<h3 class="text-sm font-medium text-green-800">{ message }</h3>
				<div class="mt-2 text-sm text-green-700">
					<p>{ description }</p>
				</div>
				<div class="mt-4">
					<div class="-mx-2 -my-1.5 flex">
						// <button type="button" class="rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50">View status</button>
						// <button type="button" class="ml-3 rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50">Dismiss</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}
